name: 🧪 Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: 🔍 Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: 🎨 Check code formatting with black
      run: |
        black --check src/ tests/
    
    - name: 🔍 Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports
    
    - name: 🧪 Run unit tests
      run: |
        python -m pytest tests/test_file_organizer_unit.py -v
    
    - name: 🧪 Run integration tests
      run: |
        python -m pytest tests/test_file_organizer_integration.py -v
    
    - name: 🧪 Run all tests with coverage
      run: |
        python -m pytest tests/ --cov=src/file_organizer --cov-report=term-missing --cov-report=xml
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install safety bandit
    
    - name: 🔒 Security check with safety
      run: |
        safety check --json --output safety-report.json || true
    
    - name: 🔒 Security check with bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json || true

  performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: 🚀 Run performance tests
      run: |
        python -m pytest tests/ -m "not slow" --durations=10